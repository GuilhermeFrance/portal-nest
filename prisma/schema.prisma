// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  cpf       String
  roleId    Int?
  role      Role?    @relation(fields: [roleId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Role {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  name      String   @unique
  updatedAt DateTime @updatedAt
  users     User[]

  @@map("roles")
}

model Client {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  cpf       String    @unique
  requests  Request[]
  createdAt DateTime  @default(now())

  @@map("clients")
}

model Request {
  id          Int           @id @default(autoincrement())
  name        String
  description String        @db.VarChar(300)
  adress      String
  type        Type?         @relation(fields: [typeId], references: [id])
  typeId      Int?
  Client      Client?       @relation(fields: [clientId], references: [id])
  clientId    Int?
  status      RequestStatus @default(ABERTO)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())

  @@map("requests")
}

model Type {
  id        Int       @id @default(autoincrement())
  key       String    @unique
  name      String    @unique
  requests  Request[]
  createdAt DateTime  @default(now())
}

enum RequestStatus {
  ABERTO
  EM_ANDAMENTO
  CONCLUIDO
  REJEITADO
}
